mainmenu "FPVM Configuration"

choice
    prompt "Target Architecture"
    default ARCH_X64

    config ARCH_X64
        bool "x64"
	help 
            Intel 64 bit with at least SSE

    
    config ARCH_RISCV64
        bool "RISC-V (64)"
	help
	    RISC-V 64 bit architecture with at least F and D
endchoice    

config HAVE_MAIN
    bool "Add a main function"
    default n
    help
       This compiles it with a main function
       that can be used for testing without LD_PRELOAD
       This is for hacking around on NVM

config USE_NVM
    bool "Use NVM"
    default n
    help
       Use the NVM virtual machine for ordinary processing
       This is for hacking around on NVM
      
config NO_OUTPUT
    bool "Disable output"
    default n

config DEBUG
    bool "Debug output"
    default n

config DEBUG_ALT_ARITH
    bool "Debug alternative arithmetic"
    default n

config TELEMETRY
    bool "Basic telemetry"
    default n
    help
       This will print out basic info that is always recorded

config TELEMETRY_PROMOTIONS
    bool "Track promotions and demotions"
    depends on TELEMETRY
    default n
    help
       This will include demotion/promotion and
       correctness demotions, which currently are more
       expensive to track than they should be
       
config TELEMETRY_PERIOD
    depends on TELEMETRY
    int "Reporting period"
    default 0
    help
        Number of FP traps between telemetry reports
	0 means that reports are generated only at thread end / process end
	
config PERF_STATS
    bool "Performance measurement"
    default n

config PERF_STATS_PERIOD
    depends on PERF_STATS
    int "Reporting period"
    default 0
    help
        Number of FP traps between performance statistics reports
	0 means that reports are generated only at thread end / process end

config INSTR_TRACES
    bool "Instruction tracing and analysis"
    default n

config INSTR_TRACES_PERIOD
    depends on INSTR_TRACES
    int "Reporting period"
    default 0
    help
        Number of FP traps between trace reports
	0 means that reports are generated only at thread end / process end


config TRAP_SHORT_CIRCUITING
    bool "Trap short-circuiting (kernel support)"
    default y
    help
       Use the FPVM kernel support to do much faster trap delivery

config INSTR_SEQ_EMULATION
    bool "Instruction sequence emulation"
    default y
    help
       Emulate as many instructions as possible per trap

config MAGIC_CORRECTNESS_TRAP
    bool "Correctness traps via calls (Magic trap)"
    default n
    help
       Add support to deliver correctness traps via
       calls.  The static binary analysis must also
       be configured to use this feature

config KERNEL_SHORT_CIRCUITING
    bool "Kernel short-circuiting (currently a nop)"
    default n
    help
       Use user-level trap handling if possible


# Add your own alternative math here
choice
    prompt "Alternative number system"
    default ALT_MATH_VANILLA

    config ALT_MATH_VANILLA
        bool "Vanilla"
	help 
            Simply emulate using a normal instruction
            Vanilla is always included as a fallback

    
    config ALT_MATH_BOXED_IEEE
        bool "Boxed IEEE"
    
    config ALT_MATH_POSIT
        bool "POSIT"
    
    config ALT_MATH_MPFR
        bool "GNU MPFR"

config MPFR_PRECISION
    int "MPFR Precision"
		default 200
		depends on ALT_MATH_MPFR

    config ALT_MATH_RATIONAL
        bool "Rationals"

endchoice
